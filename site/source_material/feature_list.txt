
This page is meant to provide a list of available features for anyone trying to decide whether 4coder is the right editor for them.  If a feature is missing here you should check out the \LINK_BEGIN{roadmap.html} roadmap \LINK_END page to see what is coming in the future.  If the feature you want is on neither, you should contact \CODE_STYLE{editor@4coder.net}.  Some features that are already in 4coder might be missing from this list, and they will be added as they are discovered.

\SECTION{Text Editing}
 \BEGIN_LIST
 \BEGIN_ITEM Cursor and mark editing paradigm \END_ITEM
 \BEGIN_ITEM Navigation by characters, words, tokens, lines, and blank lines \END_ITEM
 \BEGIN_ITEM Modern style undo and redo \END_ITEM
 \BEGIN_ITEM Word complete with matching words in open files \END_ITEM
 \BEGIN_ITEM Incremental word search \END_ITEM
 \BEGIN_ITEM Word replace \END_ITEM
 \BEGIN_ITEM List all occurences of words in open buffers \END_ITEM
 \END_LIST

\SECTION{C/C++ Editing}
 \BEGIN_LIST
 \BEGIN_ITEM Code highlighting for C/C++ code \END_ITEM
 \BEGIN_ITEM Code auto-layout rendering engine \END_ITEM
 \BEGIN_ITEM Text level auto-indenting \END_ITEM
 \BEGIN_ITEM Build in editor \END_ITEM
 \BEGIN_ITEM Jump to error \END_ITEM
 \END_LIST

\SECTION{The Customization API}
 These features are included in the alpha builds at the $5 tier and above.
 \BEGIN_LIST
 \BEGIN_ITEM Easy key rebinding \END_ITEM
 \BEGIN_ITEM Create custom commands \END_ITEM
 \BEGIN_ITEM Buffer reading and editing \END_ITEM
 \BEGIN_ITEM Buffer reading and editing \END_ITEM
 \BEGIN_ITEM View opening, closing, positioning \END_ITEM
 \BEGIN_ITEM Access to the code intelligence engine \END_ITEM
 \END_LIST

\SECTION{The Experimental Features}
 These features are included in the alpha builds at the $10 tier and above and are generally only partially implemented, hence not being fully upgraded to the standard build.
 \BEGIN_LIST
 \BEGIN_ITEM Moving cursor and mark to surrounding and matching braces
 \BEGIN_ITEM Rectangular delete
 \BEGIN_ITEM Multi-line editing
 \BEGIN_ITEM Rename a parameter
 \BEGIN_ITEM Write in explicit enum values from 0 to n
 \END_LIST

\SECTION{Transition From Emacs}
4coder's current setup and editing paradigm is modeled after emacs, so it is very natural to transition to 4coder from emacs for many users.  4coder customization is quite different from emacs though, so anyone who wants to keep their current keybinds will have to take the time to rewrite the keybinding code.  Once the initial transition is done, any user who prefers C++ to Lisp will have a much better time in their 4coder configuration code.

\SECTION{Transition From Vim}
Many vim users are resistant to any transition because of how unique the vim editing paradigm is.  For them the  
